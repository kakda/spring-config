<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mobilecnc.projects.service.ProjectDAO">
	
	<resultMap id="project" type="Project">
        <result property="projectID" column="projectID"/>
		<result property="projectName" column="projectName"/>
		<result property="projectTypeID" column="projectTypeID"/>
		<result property="billable" column="billable"/>
		<result property="description" column="description"/>
		<result property="revenue" column="revenue"/>
		<result property="revenueLicense" column="revenueLicense"/>
		<result property="revenueSI" column="revenueSI"/>
		<result property="revenueThirdParty" column="revenueThirdParty"/>
		<result property="plannedMM" column="plannedMM"/>
		<result property="plannedStartDate" column="plannedStartDate"/>
		<result property="plannedEndDate" column="plannedEndDate"/>
		<result property="started" column="started"/>
		<result property="finished" column="finished"/>
		<result property="actualMM" column="actualMM"/>
		<result property="actualStartDate" column="actualStartDate"/>
		<result property="actualEndDate" column="actualEndDate"/>
		<result property="additionalInternalMM" column="additionalInternalMM"/>
		<result property="maClosed" column="maClosed"/>
		<result property="maStartDate" column="maStartDate"/>
		<result property="maClosedDate" column="maClosedDate"/>
		<result property="customerID" column="customerID"/>
		<result property="svn" column="svn"/>
		<result property="svnUrl" column="svnUrl"/>
		<result property="redmine" column="redmine"/>
		<result property="redmineUrl" column="redmineUrl"/>
		<result property="closedReason" column="closedReason"/>
		<result property="currencyID" column="currencyID"/>
    </resultMap>
    
    <resultMap id="projectDetail" type="com.mobilecnc.projects.service.ProjectVO">
        <result property="projectID" column="projectID"/>
		<result property="projectName" column="projectName"/>
		<result property="projectTypeName" column="projectTypeName"/>
		<result property="billable" column="billable"/>
		<result property="description" column="description"/>
		<result property="revenue" column="revenue"/>
		<result property="revenueLicense" column="revenueLicense"/>
		<result property="revenueSI" column="revenueSI"/>
		<result property="revenueThirdParty" column="revenueThirdParty"/>
		<result property="plannedMM" column="plannedMM"/>
		<result property="plannedStartDate" column="plannedStartDate"/>
		<result property="plannedEndDate" column="plannedEndDate"/>
		<result property="started" column="started"/>
		<result property="finished" column="finished"/>
		<result property="actualMM" column="actualMM"/>
		<result property="actualStartDate" column="actualStartDate"/>
		<result property="actualEndDate" column="actualEndDate"/>
		<result property="additionalInternalMM" column="additionalInternalMM"/>
		<result property="maClosed" column="maClosed"/>
		<result property="maStartDate" column="maStartDate"/>
		<result property="maClosedDate" column="maClosedDate"/>
		<result property="customerID" column="customerID"/>
		<result property="svn" column="svn"/>
		<result property="svnUrl" column="svnUrl"/>
		<result property="redmine" column="redmine"/>
		<result property="redmineUrl" column="redmineUrl"/>
		<result property="closedReason" column="closedReason"/>
		<result property="currencyType" column="currencyType"/>
		<result property="customerName" column="customerName"/>
		<result property="employeeName" column="PM"/>
		<result property="projectMembers" column="projectMembers"/>
		<result property="maintenanceOwner" column="maintenanceOwner"/>
		<result property="maintenanceMembers" column="maintenanceMembers"/>
    </resultMap>
    
    <resultMap id="projectList" type="Project">
        <result property="projectID" column="projectID"/>
		<result property="projectName" column="projectName"/>
    </resultMap>
    
    <resultMap id="projectGrid" type="com.mobilecnc.projects.service.ProjectVO">
        <result property="projectID" column="projectID"/>
		<result property="projectName" column="projectName"/>
		<result property="projectTypeName" column="projectTypeName"/>
		<result property="actualMM" column="actualMM"/>
		<result property="actualStartDate" column="actualStartDate"/>
		<result property="actualEndDate" column="actualEndDate"/>
		<result property="customerName" column="customerName"/>
		<result property="employeeName" column="employeeName"/>
		<result property="plannedStartDate" column="plannedStartDate"/>
		<result property="plannedEndDate" column="plannedEndDate"/>
    </resultMap>
	
	<select id="selectProjectList" resultMap="project">  
		<![CDATA[	
			SELECT * FROM Projects
		]]>
	</select>
	<select id="selectEmployeeListByProjectID" resultMap="project">  
		<![CDATA[	
			SELECT * FROM Projects
		]]>
	</select>
	<select id="selectProjectByID" resultMap="project">  
		<![CDATA[	
			SELECT * FROM Projects
			WHERE projectID = #{projectID}
		]]>
	</select>
	
	<select id="checkExisName" resultType="int">
		SELECT COUNT(projectName) FROM dbo.Projects 
		<where>
			<if test="projectID != null">
				projectID <![CDATA[<>]]> #{projectID}
			</if>
			<if test="checkProName != null">
				${checkProName}	 
			</if>
		</where>
		COLLATE SQL_Latin1_General_CP1_CI_AS  
	</select>
	
	<select id="ajaxCheckSVN" resultType="int">
		SELECT COUNT(svn) FROM Projects 
		WHERE svn LIKE #{svn}
		COLLATE SQL_Latin1_General_CP1_CI_AS
	</select>
	
	<update id="updateProject" >
		
			Update Projects 
				<set>
					<if test="projectName != null"> 
						projectName = #{projectName},
					</if>
					<if test="projectTypeID != null"> 
						projectTypeID = #{projectTypeID},
					</if>
					<if test="billable != null"> 
						billable = #{billable},
					</if>
					<if test="description != null"> 
						description = #{description},
					</if>
					<if test="revenue != null"> 
						revenue = #{revenue},
					</if>
					<if test="revenueLicense != null"> 
						revenueLicense = #{revenueLicense},
					</if>
					<if test="revenueSI != null"> 
						revenueSI = #{revenueSI},
					</if>
					<if test="revenueThirdParty != null"> 
						revenueThirdParty = #{revenueThirdParty},
					</if>
					<if test="plannedMM != null"> 
						plannedMM = #{plannedMM},
					</if>
					<if test="plannedStartDate != null"> 
						plannedStartDate = #{plannedStartDate},
					</if>
					<if test="plannedEndDate != null"> 
						plannedEndDate = #{plannedEndDate},
					</if>
					<if test="actualMM != null"> 
						actualMM = #{actualMM},
					</if>
					<if test="actualStartDate != null"> 
						actualStartDate = #{actualStartDate},
					</if>
					<if test="actualEndDate != null"> 
						actualEndDate = #{actualEndDate},
					</if>
					<if test="additionalInternalMM != null"> 
						additionalInternalMM = #{additionalInternalMM},
					</if>
					<if test="customerID != null"> 
						customerID = #{customerID},
					</if>
					<if test="closedReason != null"> 
						closedReason = #{closedReason},
					</if>
					<if test="currencyID != 0"> 
						currencyID = #{currencyID},
					</if>
					<if test="started != null"> 
						started = #{started},
					</if>
					<if test="finished != null"> 
						finished = #{finished},
					</if>
					<if test="maStartDate != null"> 
						maStartDate = #{maStartDate},
					</if>
					<if test="maClosedDate != null"> 
						maClosedDate = #{maClosedDate},
					</if>
					<if test="maClosed != null"> 
						maClosed = #{maClosed}
					</if>
				</set>
			WHERE projectID = #{projectID}	
	</update>
	
	<insert id="insertProject" >
		<![CDATA[
			INSERT INTO Projects
			(
				projectID
				,projectName
				,projectTypeID
				,billable
				,description
				,revenue
				,revenueLicense
				,revenueSI
				,revenueThirdParty
				,plannedMM
				,plannedStartDate
				,plannedEndDate
				,actualMM
				,actualStartDate
				,actualEndDate
				,additionalInternalMM
				,customerID
				,svn
				,svnUrl
				,redmine
				,redmineUrl
				,closedReason
				,currencyID
			)
			VALUES
			(
				#{projectID}
				,#{projectName}
				,#{projectTypeID}
				,#{billable}
				,#{description}
				,#{revenue}
				,#{revenueLicense}
				,#{revenueSI}
				,#{revenueThirdParty}
				,#{plannedMM}
				,#{plannedStartDate}
				,#{plannedEndDate}
				,#{actualMM}
				,#{actualStartDate}
				,#{actualEndDate}
				,#{additionalInternalMM}
				,#{customerID}
				,#{svn}
				,#{svnUrl}
				,#{redmine}
				,#{redmineUrl}
				,#{closedReason}
				,#{currencyID}
			)				
		]]>
	</insert>
	
	<select id="getPagingRecord" resultMap="projectGrid"  parameterType="com.mobilecnc.helper.PagingCondition">
		SELECT 
				projectID
				 , projectName
				 , projectTypeName
				 , actualStartDate 
	             , actualEndDate
	             , actualMM
	             , employeeName
	             , plannedStartDate
	             , plannedEndDate
	             , customerName 
	    FROM
		(
			SELECT
				 ROW_NUMBER() OVER (ORDER BY projectID) RowNr 
				 , projectID
				 , projectName
				 , projectTypeName
				 , actualStartDate 
	             , actualEndDate
	             , actualMM
	             , employeeName
	             , plannedStartDate
	             , plannedEndDate
	             , customerName
			FROM VProjectList
			<where>
				<if test="col != null">
					${where}
				</if>
			</where> 
		) AS VTables
		WHERE RowNr BETWEEN #{start} AND #{end} ${where} 
		ORDER BY ${sidx} ${sord}	
	</select>
	
	<select id="getProjectReport" resultMap="projectGrid"  parameterType="com.mobilecnc.helper.PagingCondition">
		SELECT 
				projectID
				 , projectName
				 , projectTypeName
				 , actualStartDate 
	             , actualEndDate
	             , actualMM
	             , employeeName
	             , plannedStartDate
	             , plannedEndDate
	             , customerName 
	    FROM
		(
			SELECT
				 ROW_NUMBER() OVER (ORDER BY projectID) RowNr 
				 , projectID
				 , projectName
				 , projectTypeName
				 , actualStartDate 
	             , actualEndDate
	             , actualMM
	             , employeeName
	             , plannedStartDate
	             , plannedEndDate
	             , customerName
			FROM VProjectList
			<where>
				<if test="col != null">
					${where}
				</if>
			</where> 
		) AS VTables		
	</select>
	
		
	<select id="getRecordCount" resultType="int" parameterType="com.mobilecnc.helper.PagingCondition" >
			SELECT COUNT(projectID) FROM VProjectList 
			<where>
				<if test="col != null">
					${where}
				</if>
			</where> 
	</select>
	
	<select id="getPagingRecordClose" resultMap="projectGrid"  parameterType="com.mobilecnc.helper.PagingCondition">
		SELECT 
			 projectID
			 , projectName
			 , projectTypeName
			 , actualStartDate 
             , actualEndDate
             , actualMM
             , employeeName
             , plannedStartDate
             , plannedEndDate
             , customerName
		FROM VProjectListClose 
		WHERE RowNr BETWEEN #{start} AND #{end} ${where} 
		ORDER BY ${sidx} ${sord}
	</select>
	
	<select id="getRecordCountClose" resultType="int" parameterType="com.mobilecnc.helper.PagingCondition" >
			SELECT COUNT(projectID) FROM VProjectListClose 
			<where>
				<if test="col != null"> 
					${col} ${oper} ${val}
				</if>
			</where> 
	</select>
	
	<select id="deleteProject" parameterType="java.lang.String">
		<![CDATA[
		DELETE FROM Projects
		WHERE projectID = #{projectID};			
		]]>
	</select>
	
	<select id="getProject" parameterType="java.lang.String" resultMap="projectDetail">
		SELECT * FROM VProjectListDetial
		WHERE projectID = #{projectID};
	</select>
	
	<select id="getProjectForTimeCard" parameterType="com.mobilecnc.timeCards.EntryParameter" resultMap="project" statementType="CALLABLE">
		<!-- { call [dbo].[getProjectTimeCard](#{employeeID},#{timeCardID},#{startDate},#{endDate},#{projectTypeID}) } -->
		{ call [dbo].[getProjectTimeCard](#{employeeID},#{timeCardID},null,null,#{projectTypeID})}	
	</select>
	
	<resultMap id="projectYear" type="Project">
		<result property="projectName" column="projectName"/>
    </resultMap>
	<select id="projectYear" parameterType="java.lang.String" resultMap="projectYear">
		<![CDATA[
		SELECT DISTINCT Year(actualStartDate) AS projectName
		FROM Projects
		WHERE actualStartDate is not null AND actualStartDate <> ''
		ORDER BY Year(actualStartDate) ASC
		]]>
	</select>
</mapper>