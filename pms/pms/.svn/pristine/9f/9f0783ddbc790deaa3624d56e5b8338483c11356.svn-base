<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mobilecnc.projectMembers.service.ProjectMemberDAO">
	<resultMap id="projectMember" type="ProjectMember">
        <result property="projectID" column="projectID"/>
		<result property="employeeID" column="employeeID"/>
		<result property="memberTypeID" column="memberTypeID"/>
		<result property="plannedAssignDate" column="plannedAssignDate"/>
		<result property="plannedReleaseDate" column="plannedReleaseDate"/>
    </resultMap>
    
    <resultMap id="members" type="ProjectMember">
		<result property="employeeID" column="employeeID"/>
    </resultMap>
    <select id="selectProjectMembers" resultMap="members" resultType="com.mobilecnc.projectMembers.service.ProjectMemberVO">  
		<![CDATA[	
			SELECT PM.employeeID
			FROM ProjectMembers AS PM
			INNER JOIN Employees AS EMP
			ON PM.employeeID = EMP.employeeID
			WHERE PM.projectID = #{projectID}
			AND PM.memberTypeID = 'MBT02'
			AND EMP.type = #{employeeType}
		]]>
	</select>
	
	<select id="selectProjectMembersMa" resultMap="members" resultType="com.mobilecnc.projectMembers.service.ProjectMemberVO">  
		<![CDATA[	
			SELECT PM.employeeID
			FROM ProjectMembers AS PM
			INNER JOIN Employees AS EMP
			ON PM.employeeID = EMP.employeeID
			WHERE PM.projectID = #{projectID}
			AND PM.maMemberTypeID = 'MBT03'
			AND EMP.type = #{employeeType}
		]]>
	</select>
	
	<select id="selectProjectMemberList" resultMap="projectMember">  
		<![CDATA[	
			SELECT *
			FROM ProjectMembers
		]]>
	</select>
	
	<insert id="insertProjectMember" >
		<![CDATA[
			If Not Exists
			(
				SELECT projectID
				FROM ProjectMembers
				WHERE 
					projectID = #{projectID}
					AND employeeID = #{employeeID}
					AND memberTypeID = #{memberTypeID}
			)
			Begin
				INSERT INTO ProjectMembers
				(
					projectID
					,employeeID
					,memberTypeID
					,plannedAssignDate
				)
				VALUES
				(
					#{projectID}
					,#{employeeID}
					,#{memberTypeID}
					,#{plannedAssignDate}	
				)
			End
							
		]]>
	</insert>
	
	<insert id="insertProjectMemberMa" >
		<![CDATA[
			If Not Exists
			(
				SELECT projectID
				FROM ProjectMembers
				WHERE 
					projectID = #{projectID}
					AND employeeID = #{employeeID}
					AND maMemberTypeID = #{maMemberTypeID}
			)
			Begin
				INSERT INTO ProjectMembers
				(
					projectID
					,employeeID
					,maMemberTypeID
					,plannedAssignDate
				)
				VALUES
				(
					#{projectID}
					,#{employeeID}
					,#{maMemberTypeID}
					,#{plannedAssignDate}	
				)
			End
							
		]]>
	</insert>
	<update id="updateProjectMember" >
		<![CDATA[
			UPDATE ProjectMembers
			SET employeeID = #{employeeID}
			WHERE projectID = #{projectID}
			AND memberTypeID = #{memberTypeID}			
		]]>
	</update>
	
	<select id="selectProjectManager" resultType="String"  >
			SELECT TOP 1 employeeID 
			FROM ProjectMembers
			WHERE projectID = #{projectID} AND memberTypeID = 'MBT01'
	</select>
	
	<select id="selectProjectManagerMa" resultType="String"  >
			SELECT TOP 1 employeeID 
			FROM ProjectMembers
			WHERE projectID = #{projectID} AND maMemberTypeID = 'MBT04'
	</select>
	
	<delete id="deleteProjectMembers">
		DELETE FROM ProjectMembers
		<!-- WHERE projectID = #{projectID} -->
	</delete>
	
	<delete id="deleteProjectMember">
		DELETE FROM ProjectMembers
		WHERE projectID = #{projectID}
		AND memberTypeID = #{memberTypeID}
	</delete>
	
	<delete id="deleteProjectMemberMa">
		DELETE FROM ProjectMembers
		WHERE projectID = #{projectID}
		AND maMemberTypeID = #{maMemberTypeID}
	</delete>
	
	<update id="updateProjectOwner" >
		if EXISTS
		(
			SELECT projectID from ProjectMembers
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
		)
		Begin
			UPDATE ProjectMembers
			SET maMemberTypeID = 'MBT04'
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
			
			DELETE FROM ProjectMembers 
			WHERE  projectID = #{projectID}
			AND employeeID = #{employeeIDOld}
			AND (memberTypeID IS NULL OR memberTypeID = '')
		END	
		Else
			if EXISTS
			(
				SELECT projectID from ProjectMembers
				WHERE projectID = #{projectID}
				AND employeeID = #{employeeIDOld}
				AND (memberTypeID IS NULL OR memberTypeID = '')
			)
			Begin
				DELETE FROM ProjectMembers 
				WHERE  projectID = #{projectID}
				AND employeeID = #{employeeIDOld}	
			END
			Else
				UPDATE ProjectMembers
				SET maMemberTypeID = ''  
				WHERE projectID = #{projectID}
				AND employeeID = #{employeeIDOld}	
			
			INSERT INTO ProjectMembers(projectID, employeeID, maMemberTypeID, plannedAssignDate)
			VALUES(#{projectID}, #{employeeID}, 'MBT04', getdate())	
	</update>
	
	<update id="deleteMultiProjectMember">
		if EXISTS
		(
			SELECT projectID from ProjectMembers
			WHERE projectID = #{projectID}
			AND (maMemberTypeID IS NULL OR maMemberTypeID = '')
			AND employeeID = #{employeeID}
		)
		Begin
			DELETE FROM ProjectMembers
			WHERE projectID = #{projectID}
			AND (maMemberTypeID IS NULL OR maMemberTypeID = '')
			AND employeeID = #{employeeID}
		End
		ELSE
			UPDATE ProjectMembers 
			SET memberTypeID = '' 
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
	</update>
	
	<update id="deleteMultiProjectMemberMa">
		if EXISTS
		(
			SELECT projectID from ProjectMembers
			WHERE projectID = #{projectID}
			AND (memberTypeID IS NULL OR memberTypeID = '')
			AND employeeID = #{employeeID}
		)
		Begin
			DELETE FROM ProjectMembers
			WHERE projectID = #{projectID}
			AND (memberTypeID IS NULL OR memberTypeID = '')
			AND employeeID = #{employeeID}
		End
		ELSE
			UPDATE ProjectMembers 
			SET maMemberTypeID = '' 
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
	</update>
	
	<update id="updateMember">
		if EXISTS
		(
			SELECT projectID from ProjectMembers
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
		)
		Begin
			UPDATE ProjectMembers 
			SET memberTypeID = 'MBT02' 
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
		End
		ELSE
			INSERT INTO ProjectMembers(projectID, employeeID, memberTypeID, plannedAssignDate)
			VALUES(#{projectID}, #{employeeID}, 'MBT02', getdate())
	</update>	
	
	<update id="updateMemberMa">
		if EXISTS
		(
			SELECT projectID from ProjectMembers
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
		)
		Begin
			UPDATE ProjectMembers 
			SET maMemberTypeID = 'MBT03' 
			WHERE projectID = #{projectID}
			AND employeeID = #{employeeID}
		End
		ELSE
			INSERT INTO ProjectMembers(projectID, employeeID, maMemberTypeID, plannedAssignDate)
			VALUES(#{projectID}, #{employeeID}, 'MBT03', getdate())
	</update>
	
</mapper>















